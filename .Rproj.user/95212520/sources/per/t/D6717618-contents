### This code will estimate subnational popualtion by age and sex with WPP and household survey data for Burkina Faso in 2014 ###

# Set up ------------------------------------------------------------------

rm(list = ls())

#install.packages(c("tidyverse", "survey", "foreign", "data.table",
#"plyr", "dplyr", "magrittr", "ggplot2", "reshape2", "readr", "xlsx", "wpp2017", "gdata"))

library(wpp2017)
library(dplyr)
library(magrittr)
library(tidyverse)
library(survey)
library(foreign)
library(data.table)
library(ggplot2)
library(reshape2)
library(readr)
library(xlsx)
library(gdata)

options(scipen = 999)  # disable scientific notation in R

options(survey.lonely.psu = "adjust")

setwd("C:/Users/Kathrin Weny/Documents/")

prl <- "C:/strawberry/perl/bin/perl5.18.0.exe"

# Read in data and select Burkina Faso 2014 data points -------------------

national_data_female  <- read.csv(url("https://esa.un.org/unpd/wpp/DVD/Files/1_Indicators%20(Standard)/EXCEL_FILES/5_Interpolated/WPP2017_INT_F03_3_POPULATION_BY_AGE_ANNUAL_FEMALE.xlsx"),
                                  check.names = FALSE, skip = 16)

national_data_female  <- read.xls(perl = "./perl", "https://esa.un.org/unpd/wpp/DVD/Files/1_Indicators%20(Standard)/EXCEL_FILES/5_Interpolated/WPP2017_INT_F03_3_POPULATION_BY_AGE_ANNUAL_FEMALE.xlsx"   )

national_data_female  <- read.csv(url("https://esa.un.org/unpd/wpp/DVD/Files/1_Indicators%20(Standard)/EXCEL_FILES/5_Interpolated/WPP2017_INT_F03_3_POPULATION_BY_AGE_ANNUAL_FEMALE.xlsx"),
                                  check.names = FALSE, skip = 16)


national_data_female <- national_data_female  %>%
  filter(country == "Burkina Faso" & year == 2014)%>%
  mutate(sex = "Female")

national_data_male    <- read.csv(url("https://esa.un.org/unpd/wpp/DVD/Files/1_Indicators%20(Standard)/EXCEL_FILES/5_Interpolated/WPP2017_INT_F03_2_POPULATION_BY_AGE_ANNUAL_MALE.xlsx"),
                                  check.names = FALSE)

national_data_male <- national_data_male%>%
  filter(country == "Burkina Faso" & year == 2014) %>%
  mutate(sex = "Male")

population_data <- bind_rows(national_data_male, national_data_female) %>%
  gather(key = "age", value = "national_population", -country, - year, -sex)

# Read in survey data -----------------------------------------------------

raw_data          <- read.spss("Household survey data/BFHR70FL.SAV", to.data.frame = TRUE) 

raw_data <- raw_data %>%
 select(c("HHID","HV005","HV009", "HV021","HV022", "HV024",
                "HV105.01","HV105.02","HV105.03","HV105.04","HV105.05","HV105.06","HV105.07","HV105.08","HV105.09","HV105.10","HV105.11","HV105.12","HV105.13","HV105.14","HV105.15","HV105.16","HV105.17","HV105.18","HV105.19","HV105.20",
                "HV104.01","HV104.02","HV104.03","HV104.04","HV104.05","HV104.06","HV104.07","HV104.08","HV104.09","HV104.10","HV104.11","HV104.12","HV104.13","HV104.14","HV104.15","HV104.16","HV104.17","HV104.18","HV104.19","HV104.20"))

long_survey_data <- reshape(raw_data, varying = c(7:46), direction = "long", idvar = "HHID", sep = ".", timevar = "order")


survey_data <- long_survey_data[!is.na(long_survey_data$HV105),]

# Bring in complex survey format ------------------------------------------

survey <- svydesign(id      = survey_data$HV021,         # Primary sampling
                                strata  = survey_data$HV022,         # Strata used for standard errors
                                weights = survey_data$HV005/1000000, # HH sample weight
                                data    = survey_data)               # Data

# estimate share of sex/age groups by region

data <- as.data.frame(svytable(~HV024+HV105+HV104, survey)%>% prop.table(2))

names(data) <- c("region", "age", "sex", "percentage")

# Merge data --------------------------------------------------------------

full_data <- merge(data, population_data, by = c("age", "sex"))


# calculate population numbers per region ---------------------------------

full_data <- full_data %>%
  mutate(regional_population = as.numeric(percentage)*as.numeric(national_population)) 

WRA <- full_data %>%
  select(age, sex, region, regional_population) %>%
  filter(sex == "Female" & (15 <= as.numeric(as.character(age)) & as.numeric(as.character(age)) < 50)) 

WRA <- WRA %>%
  arrange(region) %>%
  mutate(running.sum.regional_population = cumsum(regional_population)) %>%
  select(region, running.sum.regional_population)%>%
  group_by(region)%>%
  summarize(target=last(running.sum.regional_population))%>%
  select(c("region", "target"))

names(WRA) <- c("region", "WRA, in '000")

write.xlsx(WRA, "./Results/Data/women_repr_age.xlsx")
write.xlsx(full_data, "./Results/Data/subnational_population_data.xlsx")

# visualize with pop pyramid ----------------------------------------------


regions <- unique(full_data$region)

for(i in regions){

  temp <- full_data %>%
    filter(region == i) 
  
  temp <- temp[order(as.numeric(as.character(temp$age))),] 
  
  temp <- temp %>%  
  mutate(age = factor(x = age, levels = unique(age)))
  
  g <- ggplot(temp, mapping = aes(x = age, y = regional_population, fill = sex, 
                                  label=round(regional_population, digits = 2)))+
    geom_bar(stat = "identity", mapping = aes(y = ifelse(temp$sex == "Male", -regional_population, regional_population)))+
    
    coord_flip() +
    scale_fill_manual(values=c("darkorange", "dodgerblue3"))+
   
    scale_y_continuous(labels = abs, limits = c(-max(temp$regional_population), max(temp$regional_population)))+
    scale_x_discrete(breaks = c("0", "5", "10", "15", "20", "25", "30", "35", "40", "45", "50", "55", "60",
                                "65", "70", "75", "80", "85", "90", "95", "100"), 
      labels = c("0", "5", "10", "15", "20", "25", "30", "35", "40", "45", "50", "55", "60",
                           "65", "70", "75", "80", "85", "90", "95", "100")) +
    
    labs(x = "Age", y = "Population in thousands", fill = "Sex")+
    
    theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), 
          panel.background = element_rect(fill="aliceblue"), axis.line = element_line(colour="gray59"), 
          strip.text = element_text(size=15),
          strip.background =element_rect(fill="white"),
          panel.spacing.x = unit(3,"lines"))
  
  filename <- paste(i, ".pdf", sep="")
  
  ggsave(filename, device="pdf", path="./Results/Population pyramids", g, scale= .5, width = 18, height = 14, units="in")
  
}









